name: PR Dashboard

on:
  pull_request:
    # Trigger on opened, updated, or closed
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write # Required for commenting/data updating/auto-merge

jobs:
  pr-dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      # --- Run tests & static checks ---
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest bandit flake8

      - name: Run Pytest
        run: pytest -q > pytest_results.txt || true

      - name: Run Bandit (security)
        run: bandit -r src > bandit_report.txt || true

      - name: Run Flake8 (lint)
        run: flake8 src > lint_report.txt || true

      - name: Compute Metrics
        id: metrics
        run: |
          tests_failed=$(grep -c "FAILED" pytest_results.txt || true)
          bandit_issues=$(grep -c "Issue:" bandit_report.txt || true)
          risk=$(( (bandit_issues * 5) + (tests_failed * 10) ))
          [ $risk -gt 100 ] && risk=100
          
          # Set outputs for use in later steps
          echo "risk=$risk" >> $GITHUB_OUTPUT
          echo "tests_failed=$tests_failed" >> $GITHUB_OUTPUT
          echo "bandit_issues=$bandit_issues" >> $GITHUB_OUTPUT
          
          # ADDED: Conditional check for auto-merge (Risk <= 30)
          if [ $risk -le 30 ]; then
            echo "auto_merge_flag=true" >> $GITHUB_OUTPUT
          else
            echo "auto_merge_flag=false" >> $GITHUB_OUTPUT
          fi

      - name: Post PR Dashboard Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "ðŸ“Š GitHub Native Dashboard"
          message: |
            ### PR Summary
            - **Title**: ${{ github.event.pull_request.title }}
            - **Author**: @${{ github.event.pull_request.user.login }}
            - **Files Changed**: ${{ github.event.pull_request.changed_files }}
            - **Additions**: ${{ github.event.pull_request.additions }}
            - **Deletions**: ${{ github.event.pull_request.deletions }}

            ### Metrics
            | Metric | Value |
            |--------|-------|
            | Risk Score | ${{ steps.metrics.outputs.risk }} / 100 |
            | Bandit Issues | ${{ steps.metrics.outputs.bandit_issues }} |
            | Tests Failed | ${{ steps.metrics.outputs.tests_failed }} |

            ### Suggestions
            ```text
            $(cat lint_report.txt || echo "No lint issues ðŸŽ‰")
            ```
            
            **Auto-Merge Status:** ${{ steps.metrics.outputs.auto_merge_flag == 'true' && 'ðŸŸ¢ Eligible for Auto-Merge' || 'ðŸ”´ Requires Human Review (Risk > 30)' }}


      # --- Save PR summary JSON ---
      - name: Save PR summary JSON
        run: |
          mkdir -p /tmp/pr_reports
          cat <<EOF > /tmp/pr_reports/latest.json
          {
            "id": "${{ github.event.pull_request.number }}",
            "title": "${{ github.event.pull_request.title }}",
            "author": "${{ github.event.pull_request.user.login }}",
            "additions": "${{ github.event.pull_request.additions }}",
            "deletions": "${{ github.event.pull_request.deletions }}",
            "changed_files": "${{ github.event.pull_request.changed_files }}",
            "risk": "${{ steps.metrics.outputs.risk }}",
            "bandit": "${{ steps.metrics.outputs.bandit_issues }}",
            "tests_failed": "${{ steps.metrics.outputs.tests_failed }}",
            "state": "${{ github.event.pull_request.state }}",
            "merged": "${{ github.event.pull_request.merged }}",
            "auto_merged": "${{ steps.metrics.outputs.auto_merge_flag }}" # ADDED FIELD
          }
          EOF

      # --- Switch to main to update dashboard.json ---
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Update dashboard data (Ensuring Newest is first)
        run: |
          mkdir -p docs
          if [ ! -f docs/dashboard.json ]; then
            echo "[]" > docs/dashboard.json
          fi

          # Use jq to: 
          # 1. Read the existing array and the new entry.
          # 2. Filter out any existing entry with the same ID (deduplicate/update).
          # 3. Add the new entry.
          # 4. Sort the array in DESCENDING order (newest ID first) and save.
          jq --slurpfile new_entry /tmp/pr_reports/latest.json '
            (map(select(.id != $new_entry[0].id))) + $new_entry
            | sort_by(.id | tonumber) | reverse
          ' docs/dashboard.json > docs/tmp.json

          mv docs/tmp.json docs/dashboard.json


      - name: Commit & Push dashboard.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/dashboard.json
          git commit -m "Update dashboard with PR #${{ github.event.pull_request.number }}" || echo "No changes"
          git push

      # --- Post Dashboard Link to PR ---
      - name: Comment Dashboard Link
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "ðŸ“Š Live Dashboard"
          message: |
            View full AI PR Agent Dashboard here:  
            ðŸ‘‰ https://icryptologic.github.io/GITHUB-Native-PR-AI/
            
      # --- Conditional Auto Merge (ADDED) ---
      - name: Conditional Auto Merge
        if: github.event.pull_request.state == 'open' && steps.metrics.outputs.auto_merge_flag == 'true'
        uses: pascalgn/automerge-action@v0.15.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          merge_method: 'squash' 
          pull_request: ${{ github.event.pull_request.number }}
          allowed_statuses: 'success, neutral'
