name: PR Summary + Live Dashboard Update (with Live CodeQL & Dependabot)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  security-events: read

jobs:
  pr_summary_and_dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "🚀 Starting PR summary and dashboard update..."

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests pyyaml

      - name: Run Analysis
        run: echo "🔍 Running analysis for PR..."

      # 🧩 Fetch Security Alerts (CodeQL + Dependabot)
      - name: Fetch Security Alerts
        run: |
          echo "🔐 Fetching CodeQL and Dependabot alerts..."

          # Get CodeQL alert count
          codeql_response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts")

          if echo "$codeql_response" | jq -e 'type=="array"' > /dev/null; then
            codeql_alerts=$(echo "$codeql_response" | jq '[.[] | select(.state=="open")] | length')
          else
            echo "⚠️ No CodeQL alerts found or API returned a message."
            codeql_alerts=0
          fi

          # Get Dependabot alert count
          dep_response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts")

          if echo "$dep_response" | jq -e 'type=="array"' > /dev/null; then
            dependabot_alerts=$(echo "$dep_response" | jq '[.[] | select(.state=="open")] | length')
          else
            echo "⚠️ No Dependabot alerts found or API returned a message."
            dependabot_alerts=0
          fi

          echo "CodeQL Alerts: $codeql_alerts"
          echo "Dependabot Alerts: $dependabot_alerts"

          echo "codeql_alerts=$codeql_alerts" >> $GITHUB_ENV
          echo "dependabot_alerts=$dependabot_alerts" >> $GITHUB_ENV

      - name: Generate PR summary JSON
        id: pr_summary
        run: |
          echo "📊 Generating PR summary JSON..."
          jq -n \
          --arg pr_number "${{ github.event.pull_request.number }}" \
          --arg pr_title "${{ github.event.pull_request.title }}" \
          --arg pr_author "${{ github.event.pull_request.user.login }}" \
          --arg pr_state "${{ github.event.pull_request.state }}" \
          --arg pr_created "${{ github.event.pull_request.created_at }}" \
          --arg codeql "${{ env.codeql_alerts }}" \
          --arg depbot "${{ env.dependabot_alerts }}" \
          '{
            pr_number: $pr_number,
            title: $pr_title,
            author: $pr_author,
            state: $pr_state,
            created_at: $pr_created,
            codeql_alerts: $codeql,
            dependabot_alerts: $depbot
          }' > pr_summary.json

          cat pr_summary.json

      - name: Upload summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr_summary
          path: pr_summary.json

      # 🧠 Post Summary Comment on PR
      - name: Post PR Summary
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            🧾 **Live PR Summary**
            | Metric | Value |
            |---------|-------|
            | PR Number | #${{ github.event.pull_request.number }} |
            | Author | ${{ github.event.pull_request.user.login }} |
            | State | ${{ github.event.pull_request.state }} |
            | Created At | ${{ github.event.pull_request.created_at }} |
            | **CodeQL Alerts** | ${{ env.codeql_alerts }} |
            | **Dependabot Alerts** | ${{ env.dependabot_alerts }} |

      # 🧩 Update dashboard JSON in main branch
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download JSON artifact
        uses: actions/download-artifact@v4
        with:
          name: pr_summary

      - name: Update dashboard.json
        run: |
          echo "🧠 Updating dashboard.json with latest PR metrics..."
          jq --slurpfile new pr_summary.json '
            (.[0] + $new) as $combined |
            if ($combined | length) > 0 then $combined else . end
          ' dashboard.json > tmp.json && mv tmp.json dashboard.json

      - name: Commit and push dashboard.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add dashboard.json
          git commit -m "🔄 Update PR Dashboard with CodeQL & Dependabot metrics"
          git push origin main

      - name: Complete job
        run: echo "✅ PR Summary + Dashboard update completed successfully!"
