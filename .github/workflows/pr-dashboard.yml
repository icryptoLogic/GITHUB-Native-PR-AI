name: PR Validation & Metrics Update

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  security-events: read  # ðŸ†• needed for CodeQL / Dependabot API

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pytest bandit jq requests

      - name: Run Pytest
        id: tests
        run: |
          pytest src/test_app.py -q --disable-warnings || true
          total=$(pytest src/test_app.py -q --disable-warnings | grep -Eo "[0-9]+ passed" | awk '{print $1}')
          failed=$(pytest src/test_app.py -q --disable-warnings | grep -Eo "[0-9]+ failed" | awk '{print $1}')
          total=${total:-0}
          failed=${failed:-0}
          echo "total_tests=$total" >> $GITHUB_OUTPUT
          echo "failed_tests=$failed" >> $GITHUB_OUTPUT

      - name: Run Bandit Security Scan
        id: bandit
        run: |
          mkdir -p reports
          bandit -r src -f json -o reports/bandit.json || true
          issues=$(jq '.results | length' reports/bandit.json)
          echo "issues=$issues" >> $GITHUB_OUTPUT

      # ðŸ†• CodeQL and Dependabot Metrics
      - name: Fetch Dependabot Alerts
        id: dependabot
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          alerts=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/dependabot/alerts?state=open" | jq length)
          echo "alerts=$alerts" >> $GITHUB_OUTPUT

      - name: Fetch CodeQL Alerts
        id: codeql
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          issues=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/code-scanning/alerts?state=open" | jq length)
          echo "issues=$issues" >> $GITHUB_OUTPUT

      - name: Compute Risk Score
        id: risk
        run: |
          bandit=${{ steps.bandit.outputs.issues }}
          failed=${{ steps.tests.outputs.failed_tests }}
          dependabot=${{ steps.dependabot.outputs.alerts }}
          codeql=${{ steps.codeql.outputs.issues }}
          risk=$(( (bandit * 5) + (failed * 10) + (dependabot * 5) + (codeql * 7) ))
          if [ $risk -gt 100 ]; then risk=100; fi
          echo "risk=$risk" >> $GITHUB_OUTPUT

      - name: Update Dashboard JSON
        run: |
          mkdir -p docs
          pr_number="${{ github.event.pull_request.number }}"
          pr_title="${{ github.event.pull_request.title }}"
          author="${{ github.event.pull_request.user.login }}"
          bandit=${{ steps.bandit.outputs.issues }}
          failed=${{ steps.tests.outputs.failed_tests }}
          dependabot=${{ steps.dependabot.outputs.alerts }}
          codeql=${{ steps.codeql.outputs.issues }}
          risk=${{ steps.risk.outputs.risk }}
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          jq --arg id "$pr_number" \
             --arg title "$pr_title" \
             --arg author "$author" \
             --argjson bandit "$bandit" \
             --argjson failed "$failed" \
             --argjson dependabot "$dependabot" \
             --argjson codeql "$codeql" \
             --argjson risk "$risk" \
             --arg ts "$ts" \
             'map(select(.id != ($id|tonumber))) + [{
                "id": ($id|tonumber),
                "title": $title,
                "author": $author,
                "bandit": $bandit,
                "tests_failed": $failed,
                "dependabot": $dependabot,
                "codeql": $codeql,
                "risk": $risk,
                "timestamp": $ts
             }]' docs/dashboard.json > docs/tmp.json

          mv docs/tmp.json docs/dashboard.json

      - name: Commit Dashboard Update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/dashboard.json
          git commit -m "Update metrics for PR #${{ github.event.pull_request.number }}" || echo "No changes"
          git push
