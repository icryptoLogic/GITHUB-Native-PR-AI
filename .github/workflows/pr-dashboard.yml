name: PR Dashboard

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  pr-dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest bandit flake8

      - name: Run Pytest
        run: pytest -q > pytest_results.txt || true

      - name: Run Bandit (security)
        run: bandit -r src > bandit_report.txt || true

      - name: Run Flake8 (lint)
        run: flake8 src > lint_report.txt || true

      - name: Compute Metrics
        id: metrics
        run: |
          tests_failed=$(grep -c "FAILED" pytest_results.txt || true)
          bandit_issues=$(grep -c "Issue:" bandit_report.txt || true)
          risk=$(( (bandit_issues * 5) + (tests_failed * 10) ))
          [ $risk -gt 100 ] && risk=100
          echo "risk=$risk" >> $GITHUB_OUTPUT
          echo "tests_failed=$tests_failed" >> $GITHUB_OUTPUT
          echo "bandit_issues=$bandit_issues" >> $GITHUB_OUTPUT

      - name: Post PR Dashboard Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "ðŸ“Š GitHub Native Dashboard"
          message: |
            ### PR Summary
            - **Title**: ${{ github.event.pull_request.title }}
            - **Author**: @${{ github.event.pull_request.user.login }}
            - **Files Changed**: ${{ github.event.pull_request.changed_files }}
            - **Additions**: ${{ github.event.pull_request.additions }}
            - **Deletions**: ${{ github.event.pull_request.deletions }}

            ### Metrics
            | Metric | Value |
            |--------|-------|
            | Risk Score | ${{ steps.metrics.outputs.risk }} / 100 |
            | Bandit Issues | ${{ steps.metrics.outputs.bandit_issues }} |
            | Tests Failed | ${{ steps.metrics.outputs.tests_failed }} |

            ### Suggestions
            ```text
            $(cat lint_report.txt || echo "No lint issues ðŸŽ‰")
            ```

      - name: Save PR summary JSON
        run: |
          mkdir -p reports
          cat <<EOF > reports/pr_summary_${{ github.event.pull_request.number }}.json
          {
            "id": "${{ github.event.pull_request.number }}",
            "title": "${{ github.event.pull_request.title }}",
            "author": "${{ github.event.pull_request.user.login }}",
            "additions": "${{ github.event.pull_request.additions }}",
            "deletions": "${{ github.event.pull_request.deletions }}",
            "changed_files": "${{ github.event.pull_request.changed_files }}",
            "risk": "${{ steps.metrics.outputs.risk }}",
            "bandit": "${{ steps.metrics.outputs.bandit_issues }}",
            "tests_failed": "${{ steps.metrics.outputs.tests_failed }}"
          }
          EOF

          cp reports/pr_summary_${{ github.event.pull_request.number }}.json reports/latest.json

      - name: Commit & Push report
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/
          git commit -m "Add report for PR #${{ github.event.pull_request.number }}" || echo "No changes"
          git push
