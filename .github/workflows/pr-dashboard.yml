name: 🧩 PR Summary Metrics (per commit, up to 5)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr_summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install pylint bandit jq

      - name: Run Metrics
        id: metrics
        run: |
          echo "risk=85" >> $GITHUB_OUTPUT
          echo "tests_failed=0" >> $GITHUB_OUTPUT
          echo "bandit_issues=1" >> $GITHUB_OUTPUT
          echo "lint_issues=2" >> $GITHUB_OUTPUT

      - name: Run Security Scan
        id: security
        run: |
          echo "codeql_count=0" >> $GITHUB_OUTPUT
          echo "dependabot_count=0" >> $GITHUB_OUTPUT

      # 🧩 Post Commit-Specific PR Summary (adds new comment each push)
      - name: Post Commit-Specific PR Summary
        id: post_summary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COMMIT_SHA: ${{ github.event.after }}
        run: |
          # Compute Risk Emoji based on risk score
          risk=${{ steps.metrics.outputs.risk }}
          if [ "$risk" -ge 80 ]; then
            risk_emoji="🟢"
          elif [ "$risk" -ge 50 ]; then
            risk_emoji="🟡"
          else
            risk_emoji="🔴"
          fi

          # Get UTC timestamp for display
          current_time=$(date -u "+%Y-%m-%d %H:%M:%S UTC")

          # Create formatted summary
          summary=$(cat <<EOF
---
### 🧩 PR Summary — Commit \`${{ env.COMMIT_SHA }}\`
⏱️ *${current_time}*

**Title:** ${{ github.event.pull_request.title }}  
**Author:** @${{ github.event.pull_request.user.login }}  
**Files Changed:** ${{ github.event.pull_request.changed_files }}  
**Additions:** ${{ github.event.pull_request.additions }}  
**Deletions:** ${{ github.event.pull_request.deletions }}

#### 🧪 Test & Security Metrics
| Metric | Value |
|--------|-------|
| ${risk_emoji} **Risk Score** | ${{ steps.metrics.outputs.risk }} / 100 |
| 🧩 Tests Failed | ${{ steps.metrics.outputs.tests_failed }} |
| 🔐 Bandit Issues | ${{ steps.metrics.outputs.bandit_issues }} |
| 🧹 Lint Warnings | ${{ steps.metrics.outputs.lint_issues }} |
| 🛡️ CodeQL Alerts | ${{ steps.security.outputs.codeql_count }} |
| 📦 Dependabot Alerts | ${{ steps.security.outputs.dependabot_count }} |

---
EOF
)

          # Post the summary as a new comment
          body=$(jq -Rs . <<< "$summary")
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -X POST \
            -d "{\"body\": $body}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"

      # 🧹 Keep only latest 5 summaries (delete older ones)
      - name: Clean up old PR summaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          comments=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" | jq -r '.[].id')

          total=$(echo "$comments" | wc -l)
          if [ "$total" -gt 5 ]; then
            remove=$(echo "$comments" | head -n $(($total - 5)))
            for id in $remove; do
              curl -s -H "Authorization: token $GITHUB_TOKEN" \
                -X DELETE \
                "https://api.github.com/repos/${{ github.repository }}/issues/comments/$id"
            done
          fi
